<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        ">  
        
 	<!-- 自动扫描(自动注入)，扫描*.service这个包以及它的子包的所有使用@Service注解标注的类 -->
 	<context:component-scan base-package="com.onebank.bdrc.des.service.*" />

	<!--1. 数据源 阿里 druid 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="filters" value="${mysql.jdbc.filters}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${mysql.jdbc.maxActive}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${mysql.jdbc.initialSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${mysql.jdbc.maxWait}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${mysql.jdbc.minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${mysql.jdbc.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${mysql.jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${mysql.jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${mysql.jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${mysql.jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${mysql.jdbc.testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${mysql.jdbc.maxOpenPreparedStatements}" />
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="${mysql.jdbc.removeAbandoned}" />
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="${mysql.jdbc.removeAbandonedTimeout}" />
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="${mysql.jdbc.logAbandoned}" />
	</bean>

	<!-- ========================================针对myBatis的配置项============================== -->
	<!-- 2. 配置sqlSessionFactory -->
	<bean id="mysqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
	</bean>

	<!-- 3. mybatis 自动扫描加载 Sql 映射文件 : MapperScannerConfigurer -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="mysqlSessionFactory"></property>
		<!-- 扫描这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.onebank.bdrc.des.mapper" />
	</bean>

	<!-- ================================事务相关控制======================== -->
	<!-- 4. 配置事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 5. 使用声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- ================================redis配置======================== -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
	  <property name="maxIdle" value="${redis.maxIdle}"></property> 
	  <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"></property> 
	  <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"></property> 
	  <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"></property>
 	</bean> 
 	
 	

 	


</beans>